#!/usr/bin/env python3
# SPDX-License-Identifier: GPL-3.0-or-later

"""image-diff - Compare package versions on VM images.

Gives an overview of which packages have been added/removed/changed between two
versions of a VM image.
"""

import argparse
import asyncio
from collections.abc import Mapping
from pathlib import Path

from lib import testthing
from lib.constants import IMAGES_DIR


async def get_packages(image: str) -> Mapping[str, str]:
    file = Path(image) if image.startswith("/") else Path(IMAGES_DIR, image)

    with testthing.IpcDirectory() as ipc:
        async with testthing.VirtualMachine(file, boot="mbr", ipc=ipc) as vm:
            # List all packages, irrespective of package manager (rpm or dpkg
            # or pacman). If both are missing, then the command will fail.
            #
            # We'd ideally like to get source packages everywhere, but it's a
            # bit more difficult on RPM. (TODO)
            pkgcmd = """if type dpkg-query > /dev/null 2>&1; then
                            dpkg-query -W 2>/dev/null;
                        elif type rpm > /dev/null 2>&1; then
                            rpm -qa --qf '%{NAME}\t%{EVR}\n' 2>/dev/null;
                        else pacman -Q | sed 's/ /\t/' 2>/dev/null; fi"""

            output = (await vm.execute(pkgcmd)).strip()
            return dict(line.split("\t") for line in output.splitlines())


async def diff(old: str, new: str) -> None:
    old_pkgs, new_pkgs = await asyncio.gather(get_packages(old), get_packages(new))

    print("Removed:")
    for name in sorted(set(old_pkgs) - set(new_pkgs)):
        print(f"  {name} ({old_pkgs[name]})")
    print()

    print("Added:")
    for name in sorted(set(new_pkgs) - set(old_pkgs)):
        print(f"  {name} ({new_pkgs[name]})")
    print()

    print("Changed:")
    for name in sorted(set.intersection(set(new_pkgs), set(old_pkgs))):
        if new_pkgs[name] != old_pkgs[name]:
            print(f"  {name} ({old_pkgs[name]} -> {new_pkgs[name]})")
    print()


def main() -> None:
    parser = argparse.ArgumentParser(description="Compare package versions on VM images")
    parser.add_argument("old", help='the "old" image to compare')
    parser.add_argument("new", help='the "new" image to compare')
    args = parser.parse_args()

    with testthing.cli_helper():
        asyncio.run(diff(args.old, args.new))


if __name__ == "__main__":
    main()
