#! /bin/bash
# Shared .setup between all Debian/Ubuntu flavors

set -ex

# Enable a console on ttyS0 so that we can log-in via vm-run.
# and make the boot up more verbose
sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT/# GRUB_CMDLINE_LINUX_DEFAULT/' /etc/default/grub

# We install all dependencies of the cockpit packages since we want
# them to not spontaneously change from one test run to the next when
# the distribution repository is updated.
#
COCKPIT_DEPS="\
cryptsetup \
libblockdev-mdraid2 \
libjson-glib-1.0-0 \
libpcp3 \
libpolkit-agent-1-0 \
libpolkit-gobject-1-0 \
libpwquality-tools \
libssh-4 \
libteam-utils \
libvirt-daemon-system \
libvirt-dbus \
libosinfo-bin \
network-manager \
pcp \
policykit-1 \
packagekit \
python3-dbus \
qemu-block-extra \
realmd \
selinux-basics \
thin-provisioning-tools \
unattended-upgrades \
tuned \
xdg-utils \
udisks2 \
udisks2-lvm2 \
"

# We also install the packages necessary to join a FreeIPA domain so
# that we don't have to go to the network during a test run.
IPA_CLIENT_PACKAGES="\
freeipa-client \
python3-gssapi \
sssd-tools \
sssd-dbus \
"

TEST_PACKAGES="\
acl \
curl \
firewalld \
gdb \
strace \
ltrace \
iproute2 \
mdadm \
nfs-server \
podman \
qemu-kvm \
redis \
socat \
systemd-coredump \
systemd-timesyncd \
virtinst \
xfsprogs \
sosreport \
open-iscsi \
targetcli-fb \
tcsh \
clevis-luks \
tang \
"

DEBUG_PACKAGES=''

# wait until cloud-init finishes, so that it doesn't clobber sources.list
until systemctl list-jobs | grep -q "No jobs"; do sleep 1; done

RELEASE=$(grep -m1 ^deb /etc/apt/sources.list | awk '{print $3}')

case "$RELEASE" in
    buster)
        # timesyncd got split out in Ubuntu 20.04 and Debian 11
        TEST_PACKAGES="${TEST_PACKAGES/systemd-timesyncd /}"
        # no podman package yet
        TEST_PACKAGES="${TEST_PACKAGES/podman /}"
        ;;
    bullseye)
        # freeipa got dropped from testing: https://tracker.debian.org/pkg/freeipa
        IPA_CLIENT_PACKAGES="${IPA_CLIENT_PACKAGES/freeipa-client /}"
        ;;
    focal)
        # no podman package yet
        TEST_PACKAGES="${TEST_PACKAGES/podman /}"
        ;;
esac

if grep -q 'ID=debian' /etc/os-release; then
    # For debugging libvirt crashes
    DEBUG_PACKAGES="\
libvirt0-dbgsym  \
libglib2.0-0-dbgsym \
"
    cat <<EOF | sudo tee /etc/apt/sources.list.d/dbgsym.list
deb http://debug.mirrors.debian.org/debian-debug/ ${RELEASE}-debug main
EOF
fi

# our cloud-init.iso does not set up the host name
echo "127.0.1.1 $(hostname)" >> /etc/hosts

if grep -q 'ID=ubuntu' /etc/os-release; then
    PBUILDER_OPTS='COMPONENTS="main universe"'

    # our tests need scsi_debug, which the cloud kernel does not have; install full kernel
    TEST_PACKAGES="$TEST_PACKAGES linux-image-generic"

    # We want to use/test NetworkManager instead of netplan/networkd for ethernets
    mkdir -p /etc/NetworkManager/conf.d
    touch /etc/NetworkManager/conf.d/10-globally-managed-devices.conf
fi

# some cloud images have a pre-defined admin user or group, for them cloud-init admin creation fails
userdel -r admin || true
groupdel admin || true
useradd -m -U -c Administrator -G sudo -s /bin/bash admin
echo admin:foobar | chpasswd
cp -r ~root/.ssh ~admin/
chown -R admin:admin ~admin/.ssh

# avoid NM-wait-online hanging on disconnected interfaces
mkdir -p /etc/NetworkManager/conf.d/
printf '[main]\nno-auto-default=*\n' > /etc/NetworkManager/conf.d/noauto.conf

export DEBIAN_FRONTEND=noninteractive
apt-get -y update
# apt go-faster
echo 'Acquire::Languages "none";' > /etc/apt/apt.conf.d/90nolanguages
apt-get install -y eatmydata
APT='eatmydata apt-get -y -o Dpkg::Options::=--force-confold'

# remove packages that we don't need
for p in lxd snapd landscape-common accountsservice open-vm-tools ufw cloud-init; do $APT purge --auto-remove $p || true; done

# HACK: debian-stable image got /usr/bin/qemu-img removed, even though qemu-utils package is installed
if [ "$1" = "debian-stable" ]; then
    $APT install --reinstall -y qemu-utils
fi

# python3-rtslib-fb postinst starts rtslib-fb-targetctl.service , but that may fail due to kernel being upgraded
mkdir -p /run/systemd/system
ln -s /dev/null /run/systemd/system/rtslib-fb-targetctl.service
systemctl daemon-reload

# upgrade the system
$APT dist-upgrade

# HACK: on systemd update `systemd-network` may end up in failed state
systemctl restart systemd-networkd.service || true

# install our dependencies
$APT install $TEST_PACKAGES $COCKPIT_DEPS $DEBUG_PACKAGES $IPA_CLIENT_PACKAGES

# Prepare for building
#

# extract control files and adjust them for our release, so that we can parse the build deps
mkdir -p /tmp/out
curl -L https://github.com/cockpit-project/cockpit/archive/master.tar.gz | tar -C /tmp/out --strip-components=1 --wildcards -zxf - '*/debian/'
/tmp/out/tools/debian/adjust-for-release $(lsb_release -sc)

# Disable build-dep installation for the real builds
cat > ~/.pbuilderrc <<- EOF
DISTRIBUTION=$RELEASE
PBUILDERSATISFYDEPENDSCMD=true
$PBUILDER_OPTS
EOF

$APT install dpkg-dev pbuilder

pbuilder --create --extrapackages "fakeroot $PBUILDER_EXTRA"
/usr/lib/pbuilder/pbuilder-satisfydepends-classic --control /tmp/out/tools/debian/control --force-version --echo|grep apt-get | pbuilder --login --save-after-login
rm -rf /tmp/out

# Debian does not automatically start the default libvirt network
virsh net-autostart default

# Disable services which we don't want running by default
systemctl disable --now redis-server tuned

# Disable expensive maintenance jobs
systemctl disable apt-daily.timer apt-daily-upgrade.timer fstrim.timer man-db.timer || true

# Enable coredumping via systemd
echo "kernel.core_pattern=|/lib/systemd/systemd-coredump %P %u %g %s %t %c %e" > /etc/sysctl.d/50-coredump.conf
printf 'DefaultLimitCORE=infinity\n' >> /etc/systemd/system.conf

# in case there are unnecessary packages
$APT autoremove || true

# disable udev network names, our tests expect the kernel schema
sed -i '/GRUB_CMDLINE_LINUX=/ s/"$/ net.ifnames=0 biosdevname=0"/' /etc/default/grub
rm -f /etc/udev/rules.d/70-persistent-net.rules /etc/udev/rules.d/75-cloud-ifupdown.rules
update-grub
sed -i 's/ens[^[:space:]:]*/eth0/' /etc/network/interfaces /etc/network/interfaces.d/* /etc/netplan/*.yaml || true
update-initramfs -u


# reduce image size
apt-get clean
pbuilder clean
rm -f /var/cache/apt/*cache.bin
/var/lib/testvm/zero-disk.setup

# Final tweaks

# Enable persistent journal
mkdir -p /var/log/journal

# Allow root login with password
sed -i 's/^[# ]*PermitRootLogin .*/PermitRootLogin yes/' /etc/ssh/sshd_config

# At least debian-9 virt-install image only has RSA key
[ -e /etc/ssh/ssh_host_ed25519_key ] || ssh-keygen -f /etc/ssh/ssh_host_ed25519_key -N '' -t ed25519
[ -e /etc/ssh/ssh_host_ecdsa_key ] || ssh-keygen -f /etc/ssh/ssh_host_ecdsa_key -N '' -t ecdsa

# Prevent SSH from hanging for a long time when no external network access
echo 'UseDNS no' >> /etc/ssh/sshd_config

# HACK: https://bugzilla.mindrot.org/show_bug.cgi?id=2512
# Disable the restarting of sshd when networking changes
ln -snf /bin/true /etc/network/if-up.d/openssh-server

# Stop showing 'To run a command as administrator (user "root"), use "sudo <command>". See "man
# sudo_root" for details.` message in admins terminal.
touch /home/admin/.sudo_as_admin_successful
