#!/bin/bash

set -ex

YUM_INSTALL="yum --setopt=skip_missing_names_on_install=False -y install"
SERVER_IP=10.111.112.100

yum -y upgrade
$YUM_INSTALL docker

# static host name and IP so that peer VMs can find us
nmcli con add con-name "static-eth1" ifname eth1 type ethernet ip4 "$SERVER_IP/20" ipv4.dns "$SERVER_IP" gw4 "10.111.112.1"
nmcli con up "static-eth1"
hostnamectl set-hostname services.cockpit.lan

systemctl disable firewalld kdump crond
systemctl enable --now docker

#############
#
# FreeIPA setup
#
#############

# see https://github.com/freeipa/freeipa-container/issues/348
rm /usr/libexec/oci/hooks.d/oci-systemd-hook

# see https://hub.docker.com/r/freeipa/freeipa-server
# and https://github.com/freeipa/freeipa-container/issues/346
# there is no :latest so we go with :fedora-rawhide
docker pull freeipa/freeipa-server:fedora-rawhide
setsebool -P container_manage_cgroup 1
mkdir /var/lib/ipa-data

cat <<EOF > /run-freeipa
docker run -d --rm --name freeipa -ti -h f0.cockpit.lan \
    -e IPA_SERVER_IP=$SERVER_IP \
    -p 53:53/udp -p 53:53 -p 80:80 -p 443:443 -p 389:389 -p 636:636 -p 88:88 -p 464:464 -p 88:88/udp -p 464:464/udp -p 123:123/udp \
    -v /var/lib/ipa-data:/data:Z \
    -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
    freeipa/freeipa-server:fedora-rawhide \
    -U -p foobarfoo -a foobarfoo -n cockpit.lan -r COCKPIT.LAN --setup-dns --no-forwarders --no-ntp
EOF
chmod 755 /run-freeipa
/run-freeipa

docker logs freeipa -f &
LOGS=$!

# so wait until booted and setup is done
docker exec freeipa sh -ec 'until systemctl --quiet is-system-running; do sleep 5; done'

# stop docker logs
kill $!
wait || true

# further setup
docker exec freeipa sh -exc '
# Default password expiry of 90 days is impractical
echo foobarfoo | kinit admin@COCKPIT.LAN
ipa pwpolicy-mod --minlife=0 --maxlife=1000
# Change password to apply new password policy
printf "foobarfoo\nfoobarfoo\n" | ipa user-mod --password admin
# Allow "admins" IPA group members to run sudo
# This is an "unbreak my setup" step and ought to happen by default.
# See https://pagure.io/freeipa/issue/7538
ipa-advise enable-admins-sudo | sh -ex
ipa dnsconfig-mod --forwarder=8.8.8.8
poweroff
'

#############
#
# Samba AD setup
#
#############

# See https://hub.docker.com/r/nowsci/samba-domain
docker pull docker.io/nowsci/samba-domain
mkdir -p /var/lib/samba-data/config /var/lib/samba-data/data

# "foobarfoo" password is not accepted:
# 0000052D: Constraint violation - check_password_restrictions: the password does not meet the complexity criteria!
# supposed to be disabled with -e NOCOMPLEXITY=true, but that doesn't work
cat <<EOF > /run-samba-domain
docker run -d -it --rm --name samba \
    -e "DOMAIN=COCKPIT.LAN" \
    -e "DOMAINPASS=foobarFoo123" \
    -e "DNSFORWARDER=172.27.0.3" \
    -e "HOSTIP=$SERVER_IP" \
    -p 53:53 \
    -p 53:53/udp \
    -p 88:88 \
    -p 88:88/udp \
    -p 135:135 \
    -p 137-138:137-138/udp \
    -p 139:139 \
    -p 389:389 \
    -p 389:389/udp \
    -p 445:445 \
    -p 464:464 \
    -p 464:464/udp \
    -p 636:636 \
    -p 1024-1044:1024-1044 \
    -p 3268-3269:3268-3269 \
    -v /etc/localtime:/etc/localtime:ro \
    -v /var/lib/samba-data/data/:/var/lib/samba \
    -v /var/lib/samba-data/config:/etc/samba/external \
    --add-host services.cockpit.lan:$SERVER_IP \
    -h f0.cockpit.lan \
    nowsci/samba-domain
EOF
chmod 755 /run-samba-domain

# no need to run the script here; it initializes reasonably fast and we don't have post-setup to do for now


#############################
#
# candlepin setup
#
#############################

# We deploy candlepin via ansible
$YUM_INSTALL epel-release

# Install dependencies
CANDLEPIN_DEPS="\
ansible \
git \
openssl \
java-11-openjdk-devel \
"

$YUM_INSTALL $CANDLEPIN_DEPS

mkdir -p playbookdir; cd playbookdir;

mkdir -p roles
git clone https://github.com/candlepin/ansible-role-candlepin.git roles/candlepin
# HACK: # https://github.com/candlepin/ansible-role-candlepin/commit/2591186f3abad014a414a56d7bfbee185682728e fails with
# TASK [candlepin : Find host ip & netmask] **************************************
#   The task includes an option with an undefined variable. The error was: \"hostvars['dev']\
(cd roles/candlepin; git checkout 9450792c0bd577)

# Run the playbook
cat > inventory <<- EOF
[dev]
localhost
EOF

useradd -m admin
echo admin:foobar | chpasswd
echo 'admin ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/admin

cat > playbook.yml <<- EOF
- hosts: dev

  environment:
    JAVA_HOME: /usr/lib/jvm/java-11/

  roles:
     - role: candlepin
       candlepin_git_pull: True
       candlepin_deploy_args: "-g -a -f -t"
       candlepin_user: admin
       candlepin_user_home: /home/admin
       candlepin_checkout: /home/admin/candlepin
EOF

ansible-playbook -i inventory -c local -v --skip-tags 'system_update' playbook.yml

rm -rf playbookdir


#############################
#
# Selenium setup
#
#############################

# docker images that we need for integration testing
docker pull selenium/hub:3
docker pull selenium/node-chrome-debug:3
docker pull selenium/node-firefox-debug:3


#############################
#
# Final tweaks
#
#############################

yum clean all

rm -rf /var/log/journal/*
echo "kernel.core_pattern=|/usr/lib/systemd/systemd-coredump %p %u %g %s %t %e" > /etc/sysctl.d/50-coredump.conf

# Audit events to the journal
rm -f '/etc/systemd/system/multi-user.target.wants/auditd.service'
rm -rf /var/log/audit/

# reduce image size
/var/lib/testvm/zero-disk.setup
