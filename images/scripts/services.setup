#!/bin/bash

set -ex

SERVER_IP=10.111.112.100

# static host name and IP so that peer VMs can find us
systemctl enable --now NetworkManager
nmcli con add con-name "static-mcast1" ifname ens15 type ethernet ip4 "$SERVER_IP/20" ipv4.dns "$SERVER_IP" gw4 "10.111.112.1"
nmcli con up "static-mcast1"
hostnamectl set-hostname services.cockpit.lan

function docker_pull() {
    # we get images from our mirror on quay to work around dockerhub rate limits, see sync-quay
    podman pull "quay.io/cockpit/$1-$2" && podman tag "quay.io/cockpit/$1-$2" "docker.io/$1/$2"
}

#############
#
# FreeIPA setup
#
#############

# see https://quay.io/repository/freeipa/freeipa-server
# and https://github.com/freeipa/freeipa-container/issues/346
# there is no :latest so we go with :fedora-rawhide
podman pull quay.io/freeipa/freeipa-server:fedora-rawhide
setsebool -P container_manage_cgroup 1
mkdir /var/lib/ipa-data

cat <<EOF > /root/run-freeipa
podman run -d --rm --name freeipa -ti -h f0.cockpit.lan \
    -e IPA_SERVER_IP=$SERVER_IP \
    -p 53:53/udp -p 53:53 -p 80:80 -p 443:443 -p 389:389 -p 636:636 -p 88:88 -p 464:464 -p 88:88/udp -p 464:464/udp -p 123:123/udp \
    -v /var/lib/ipa-data:/data:Z \
    -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
    quay.io/freeipa/freeipa-server:fedora-rawhide \
    -U -p foobarfoo -a foobarfoo -n cockpit.lan -r COCKPIT.LAN --setup-dns --no-forwarders --no-ntp
EOF
chmod 755 /root/run-freeipa
/root/run-freeipa

podman logs -f freeipa &
LOGS=$!

# so wait until booted and setup is done
podman exec freeipa sh -ec 'until systemctl --quiet is-system-running; do sleep 5; done'

# stop podman logs
kill $LOGS
wait || true

# further setup
podman exec freeipa sh -exc '
# Default password expiry of 90 days is impractical
echo foobarfoo | kinit admin@COCKPIT.LAN
ipa pwpolicy-mod --minlife=0 --maxlife=1000
# Change password to apply new password policy
printf "foobarfoo\nfoobarfoo\n" | ipa user-mod --password admin
# Allow "admins" IPA group members to run sudo
# This is an "unbreak my setup" step and ought to happen by default.
# See https://pagure.io/freeipa/issue/7538
ipa-advise enable-admins-sudo | sh -ex
ipa dnsconfig-mod --forwarder=8.8.8.8
poweroff
'

#############
#
# Samba AD setup
#
#############

# See https://hub.docker.com/r/nowsci/samba-domain
docker_pull nowsci samba-domain
mkdir -p /var/lib/samba-data/config /var/lib/samba-data/data

# "foobarfoo" password is not accepted:
# 0000052D: Constraint violation - check_password_restrictions: the password does not meet the complexity criteria!
# supposed to be disabled with -e NOCOMPLEXITY=true, but that doesn't work
cat <<EOF > /root/run-samba-domain
podman run -d -it --rm --name samba \
    -e "DOMAIN=COCKPIT.LAN" \
    -e "DOMAINPASS=foobarFoo123" \
    -e "DNSFORWARDER=172.27.0.3" \
    -e "HOSTIP=$SERVER_IP" \
    -p 53:53 \
    -p 53:53/udp \
    -p 88:88 \
    -p 88:88/udp \
    -p 135:135 \
    -p 137-138:137-138/udp \
    -p 139:139 \
    -p 389:389 \
    -p 389:389/udp \
    -p 445:445 \
    -p 464:464 \
    -p 464:464/udp \
    -p 636:636 \
    -p 1024-1044:1024-1044 \
    -p 3268-3269:3268-3269 \
    -v /var/lib/samba-data/data/:/var/lib/samba:z \
    -v /var/lib/samba-data/config:/etc/samba/external:z \
    --add-host services.cockpit.lan:$SERVER_IP \
    -h f0.cockpit.lan \
    nowsci/samba-domain
EOF
chmod 755 /root/run-samba-domain

# no need to run the script here; it initializes reasonably fast and we don't have post-setup to do for now


#############################
#
# candlepin setup
#
#############################

# unfortunately the setup only works on RHEL/CentOS 7: https://github.com/candlepin/ansible-role-candlepin/pull/12
# so we have to run that in a CentOS 7 container

podman run --name=candlepin --uts=host --publish=8443:8443 --privileged --detach quay.io/centos/centos:centos7 /sbin/init

podman exec -i candlepin sh -eux <<EOF
# wait until booted
systemctl start multi-user.target
YUM_INSTALL="yum --setopt=skip_missing_names_on_install=False -y install"
# We deploy candlepin via ansible
\$YUM_INSTALL epel-release
# Install dependencies
\$YUM_INSTALL ansible git-core openssl java-11-openjdk-devel sudo initscripts gettext

useradd candlepin
echo 'candlepin ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/candlepin
EOF

podman exec -i -u candlepin candlepin sh -eux <<EOF
cd
mkdir -p playbookdir/roles/
git clone --depth=1 https://github.com/candlepin/ansible-role-candlepin.git playbookdir/roles/candlepin

cat > playbookdir/playbook.yml <<- EOP
- hosts: localhost
  environment:
    JAVA_HOME: /usr/lib/jvm/java-11/
  roles:
     - role: candlepin
       candlepin_deploy_args: "-g -a -f -t"
EOP

# the playbook fails, but comes far enough to start candlepin/tomcat
ansible-playbook -v --skip-tags 'system_update' playbookdir/playbook.yml

sudo yum clean all
sudo systemctl enable tomcat
EOF

# validate that it works
curl --insecure --head https://localhost:8443/candlepin/

# copy the certificate to where the tests expect them
mkdir -p /home/admin/candlepin
podman cp candlepin:/home/candlepin/candlepin/generated_certs /home/admin/candlepin/
chown -R admin:admin /home/admin/candlepin/

podman exec candlepin poweroff

cat <<EOF > /root/run-candlepin
#!/bin/sh
podman start candlepin
EOF
chmod 755 /root/run-candlepin

# disable automatic updates
systemctl disable --now zincati.service

#############################
#
# Final tweaks
#
#############################

rm -rf /var/log/journal/*

# reduce image size
/var/lib/testvm/zero-disk.setup
