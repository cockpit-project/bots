#!/bin/bash
#
# Copyright (C) 2015 Red Hat Inc.
# Author: <kashyap@redhat.com>
# Further contributions: <pjp@fedoraproject.org>
# Adapted: <mmarusak@redhat.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# Adapted from create-guest-qcow2.  We don't use that script as is
# since it is, to quote Mr Parker, "2% code and 98% config stuff".

set -ex

if [ "$#" -lt 3 ]; then
    echo >&2 "Usage: virt-install-rhel4edge IMAGE ARCH URL"
    exit 1
fi

out=$1
arch=$2
url=$3
VERSION="9-2"
VIRT_WAIT="10" # wait 10 minutes to finish installation
virt_log_file="$(basename $url).log"

base=$(dirname $0)

# HACK: Extract fleet.ks file and fix the kickstart for rhel4edge.
# 'rootpw' parameter has to be defined for non-interactive installation
# https://issues.redhat.com/browse/THEEDGE-3825
fleet_ks_file="$(basename $url).ks"
isoinfo  -i $url -x "/FLEET.KS;1" > "$fleet_ks_file"
sed -i "/network --boot/a rootpw --lock" "$fleet_ks_file"

qemu-img create -f qcow2 "$out" 12G

connect="--connect=qemu:///session"
name=$(basename $1)-builder

cleanup_builder_vm () {
  if virsh $connect list --state-running --name | grep -q $name; then
      virsh $connect destroy $name
  fi
  if virsh $connect list --all --name | grep -q $name; then
      virsh $connect undefine $name
  fi
}

cleanup_builder_vm

virt-install $connect \
                        --name=$name \
                        --extra-args="inst.stage2=hd:LABEL=RHEL-${VERSION}-0-BaseOS-x86_64 inst.ks=file:/$fleet_ks_file console=ttyS0,115200" \
                        --disk "path=$out,format=qcow2" \
                        --ram 4096 \
                        --vcpus=1 \
                        --location="$url" \
                        --nographics \
                        --initrd-inject="$(realpath $fleet_ks_file)" \
                        --noreboot \
                        --serial=file,path="$(realpath $virt_log_file)" \
                        --noautoconsole \
                        --wait "$VIRT_WAIT" || true
machine_status="$(virsh $connect dominfo $name | grep State: | sed 's/State:\s*//')"

cleanup_builder_vm


rm "$fleet_ks_file"
if echo "$machine_status" | grep "shut off"; then
    rm "$virt_log_file"
    echo "INSTALLATION PASSED"
else
    cat $virt_log_file | sed 's/[[:cntrl:]]//g'
    rm "$virt_log_file"
    echo "INSTALLATION FAILED"
    exit 1
fi
